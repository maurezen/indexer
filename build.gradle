plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

group 'org.maurezen.indexer'
version '0.5.0-SNAPSHOT'

repositories {
    mavenCentral()
    google()
}

ext {
    junitVersion = '5.7.0'
    ewahVersion = '1.1.7'
    guavaVersion = '30.1-jre'
    kotlinVersion = '1.4.31'
    kotlinCoroutinesVersion = '1.4.3'
    log4jVersion = '2.14.1'
    arrow_version = '0.13.1'

    isCiServer = System.getenv().containsKey("CI")

    intellijFolderName = "intellij-community-master"
    intellijFolder = new File(projectDir.parent, intellijFolderName)
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    implementation "com.googlecode.javaewah:JavaEWAH:${ewahVersion}"

    implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"

    implementation "io.arrow-kt:arrow-core:${arrow_version}"

    testImplementation platform("org.junit:junit-bom:${junitVersion}")
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation project
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    environment "ORG_MAUREZEN_INDEXER_IDEA_FOLDER_PRESENT", intellijFolder.exists()
    environment "ORG_MAUREZEN_INDEXER_IDEA_PATH", intellijFolder
    maxHeapSize = isCiServer ? "6g" : "32g"
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Implementation-Title': 'indexer'
    }

    from { configurations.compile.collect {it.isDirectory() ? it : zipTree(it) } }
}

shadowJar {
    archiveBaseName.set(project.name)
    archiveVersion.set(project.version.toString())
}